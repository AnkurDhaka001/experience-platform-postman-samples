{
  "info": {
    "_postman_id": "a91c5702-7162-4f0e-bb06-218f2195d14f",
    "name": "Adobe Experience Platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Catalog Service",
      "item": [
        {
          "name": "accounts",
          "item": [
            {
              "name": "Fetches a list of Accounts.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/accounts?connector={{connector}}&description={{description}}&version={{version}}&created={{created}}&updated={{updated}}&createdClient={{createdClient}}&createdUser={{createdUser}}&updatedUser={{updatedUser}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "accounts"],
                  "query": [
                    {
                      "key": "connector",
                      "value": "{{connector}}"
                    },
                    {
                      "key": "description",
                      "value": "{{description}}"
                    },
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "created",
                      "value": "{{created}}"
                    },
                    {
                      "key": "updated",
                      "value": "{{updated}}"
                    },
                    {
                      "key": "createdClient",
                      "value": "{{createdClient}}"
                    },
                    {
                      "key": "createdUser",
                      "value": "{{createdUser}}"
                    },
                    {
                      "key": "updatedUser",
                      "value": "{{updatedUser}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Saves a new account.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Account to be posted."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/accounts",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "accounts"]
                }
              },
              "response": []
            },
            {
              "name": "Fetches Accounts by ID.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/accounts/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "accounts", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates an existing Account by ID.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Account field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/accounts/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "accounts", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Saves a new Account with a specified ID.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Account to be posted."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/accounts/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "accounts", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates specified attributes of an existing Account.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Account field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/accounts/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "accounts", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Deletes an Account by ID.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/accounts/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "accounts", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for accounts",
          "_postman_isSubFolder": true
        },
        {
          "name": "batches",
          "item": [
            {
              "name": "Fetches a list of Batches.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches?limit={{limit}}&createdAfter={{createdAfter}}&createdBefore={{createdBefore}}&created={{created}}&createdClient={{createdClient}}&updated={{updated}}&createdUser={{createdUser}}&updatedUser={{updatedUser}}&version={{version}}&status={{status}}&recordCount={{recordCount}}&failedRecordCount={{failedRecordCount}}&size={{size}}&started={{started}}&completed={{completed}}&startAfter={{startAfter}}&startBefore={{startBefore}}&endAfter={{endAfter}}&endBefore={{endBefore}}&batch={{batch}}&externalId={{externalId}}&connection={{connection}}&connector={{connector}}&dataSet={{dataSet}}&dataSetFile={{dataSetFile}}&dataSetView={{dataSetView}}&transform={{transform}}&orderBy={{orderBy}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "batches"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "createdAfter",
                      "value": "{{createdAfter}}"
                    },
                    {
                      "key": "createdBefore",
                      "value": "{{createdBefore}}"
                    },
                    {
                      "key": "created",
                      "value": "{{created}}"
                    },
                    {
                      "key": "createdClient",
                      "value": "{{createdClient}}"
                    },
                    {
                      "key": "updated",
                      "value": "{{updated}}"
                    },
                    {
                      "key": "createdUser",
                      "value": "{{createdUser}}"
                    },
                    {
                      "key": "updatedUser",
                      "value": "{{updatedUser}}"
                    },
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "status",
                      "value": "{{status}}"
                    },
                    {
                      "key": "recordCount",
                      "value": "{{recordCount}}"
                    },
                    {
                      "key": "failedRecordCount",
                      "value": "{{failedRecordCount}}"
                    },
                    {
                      "key": "size",
                      "value": "{{size}}"
                    },
                    {
                      "key": "started",
                      "value": "{{started}}"
                    },
                    {
                      "key": "completed",
                      "value": "{{completed}}"
                    },
                    {
                      "key": "startAfter",
                      "value": "{{startAfter}}"
                    },
                    {
                      "key": "startBefore",
                      "value": "{{startBefore}}"
                    },
                    {
                      "key": "endAfter",
                      "value": "{{endAfter}}"
                    },
                    {
                      "key": "endBefore",
                      "value": "{{endBefore}}"
                    },
                    {
                      "key": "batch",
                      "value": "{{batch}}"
                    },
                    {
                      "key": "externalId",
                      "value": "{{externalId}}"
                    },
                    {
                      "key": "connection",
                      "value": "{{connection}}"
                    },
                    {
                      "key": "connector",
                      "value": "{{connector}}"
                    },
                    {
                      "key": "dataSet",
                      "value": "{{dataSet}}"
                    },
                    {
                      "key": "dataSetFile",
                      "value": "{{dataSetFile}}"
                    },
                    {
                      "key": "dataSetView",
                      "value": "{{dataSetView}}"
                    },
                    {
                      "key": "transform",
                      "value": "{{transform}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Saves a new Batch.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Batch to be posted."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "batches"]
                }
              },
              "response": []
            },
            {
              "name": "Fetches the unique values stored in the requested field, standard filtering applies before gathering the uniques. Supported fields are [id]",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches/uniques/:field?limit={{limit}}&createdAfter={{createdAfter}}&createdBefore={{createdBefore}}&created={{created}}&createdClient={{createdClient}}&updated={{updated}}&createdUser={{createdUser}}&updatedUser={{updatedUser}}&version={{version}}&status={{status}}&recordCount={{recordCount}}&failedRecordCount={{failedRecordCount}}&size={{size}}&started={{started}}&completed={{completed}}&startAfter={{startAfter}}&startBefore={{startBefore}}&endAfter={{endAfter}}&endBefore={{endBefore}}&batch={{batch}}&externalId={{externalId}}&connection={{connection}}&connector={{connector}}&dataSet={{dataSet}}&dataSetFile={{dataSetFile}}&dataSetView={{dataSetView}}&transform={{transform}}&orderBy={{orderBy}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "batches",
                    "uniques",
                    ":field"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "createdAfter",
                      "value": "{{createdAfter}}"
                    },
                    {
                      "key": "createdBefore",
                      "value": "{{createdBefore}}"
                    },
                    {
                      "key": "created",
                      "value": "{{created}}"
                    },
                    {
                      "key": "createdClient",
                      "value": "{{createdClient}}"
                    },
                    {
                      "key": "updated",
                      "value": "{{updated}}"
                    },
                    {
                      "key": "createdUser",
                      "value": "{{createdUser}}"
                    },
                    {
                      "key": "updatedUser",
                      "value": "{{updatedUser}}"
                    },
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "status",
                      "value": "{{status}}"
                    },
                    {
                      "key": "recordCount",
                      "value": "{{recordCount}}"
                    },
                    {
                      "key": "failedRecordCount",
                      "value": "{{failedRecordCount}}"
                    },
                    {
                      "key": "size",
                      "value": "{{size}}"
                    },
                    {
                      "key": "started",
                      "value": "{{started}}"
                    },
                    {
                      "key": "completed",
                      "value": "{{completed}}"
                    },
                    {
                      "key": "startAfter",
                      "value": "{{startAfter}}"
                    },
                    {
                      "key": "startBefore",
                      "value": "{{startBefore}}"
                    },
                    {
                      "key": "endAfter",
                      "value": "{{endAfter}}"
                    },
                    {
                      "key": "endBefore",
                      "value": "{{endBefore}}"
                    },
                    {
                      "key": "batch",
                      "value": "{{batch}}"
                    },
                    {
                      "key": "externalId",
                      "value": "{{externalId}}"
                    },
                    {
                      "key": "connection",
                      "value": "{{connection}}"
                    },
                    {
                      "key": "connector",
                      "value": "{{connector}}"
                    },
                    {
                      "key": "dataSet",
                      "value": "{{dataSet}}"
                    },
                    {
                      "key": "dataSetFile",
                      "value": "{{dataSetFile}}"
                    },
                    {
                      "key": "dataSetView",
                      "value": "{{dataSetView}}"
                    },
                    {
                      "key": "transform",
                      "value": "{{transform}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "field"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches/:id?aggregate={{aggregate}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "batches", ":id"],
                  "query": [
                    {
                      "key": "aggregate",
                      "value": "{{aggregate}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                },
                "description": "Fetches Batches by ID."
              },
              "response": []
            },
            {
              "name": "Updates an existing Batch by ID.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Data set field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "batches", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Creates a new Batch with a specified Id.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Batch to be created."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "batches", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates specified attributes of an existing Batch.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Data set field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "batches", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Deletes a Batch by ID.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "batches", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for batches",
          "_postman_isSubFolder": true
        },
        {
          "name": "health",
          "item": [
            {
              "name": "Catalog healthcheck report. Used by monitoring services and dashboards. On local the URI is /catalog/health.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/health?api_key={{api_key}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "health"],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "{{api_key}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for health",
          "_postman_isSubFolder": true
        },
        {
          "name": "health-detailed",
          "item": [
            {
              "name": "Catalog healthcheck report with dependencies. Used by monitoring services and dashboards.On local the URI should be /catalog/health-detailed.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/health-detailed?api_key={{api_key}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "health-detailed"],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "{{api_key}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for health-detailed",
          "_postman_isSubFolder": true
        },
        {
          "name": "largeDocuments",
          "item": [
            {
              "name": "Fetches Large document by ID.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/largeDocuments/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "largeDocuments",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for largeDocuments",
          "_postman_isSubFolder": true
        },
        {
          "name": "connections",
          "item": [
            {
              "name": "Fetches a list of Connections.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connections?connector={{connector}}&parentConnectionId={{parentConnectionId}}&name={{name}}&accountId={{accountId}}&description={{description}}&enabled={{enabled}}&version={{version}}&created={{created}}&updated={{updated}}&createdClient={{createdClient}}&createdUser={{createdUser}}&updatedUser={{updatedUser}}&ingestStart={{ingestStart}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "connections"],
                  "query": [
                    {
                      "key": "connector",
                      "value": "{{connector}}"
                    },
                    {
                      "key": "parentConnectionId",
                      "value": "{{parentConnectionId}}"
                    },
                    {
                      "key": "name",
                      "value": "{{name}}"
                    },
                    {
                      "key": "accountId",
                      "value": "{{accountId}}"
                    },
                    {
                      "key": "description",
                      "value": "{{description}}"
                    },
                    {
                      "key": "enabled",
                      "value": "{{enabled}}"
                    },
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "created",
                      "value": "{{created}}"
                    },
                    {
                      "key": "updated",
                      "value": "{{updated}}"
                    },
                    {
                      "key": "createdClient",
                      "value": "{{createdClient}}"
                    },
                    {
                      "key": "createdUser",
                      "value": "{{createdUser}}"
                    },
                    {
                      "key": "updatedUser",
                      "value": "{{updatedUser}}"
                    },
                    {
                      "key": "ingestStart",
                      "value": "{{ingestStart}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Saves a new Connection.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Connection to be posted."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connections",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "connections"]
                }
              },
              "response": []
            },
            {
              "name": "Fetches Connections by ID.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connections/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "connections",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates an existing Connection by ID.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Connection field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connections/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "connections",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Saves a new Connection with a specified ID.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Connection to be posted."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connections/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "connections",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates specified attributes of an existing Connection.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Connection field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connections/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "connections",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Deletes a Connection by ID.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connections/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "connections",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches DataSets for the given Connection.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connections/:id/dataSets?orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}&tags={{tags}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "connections",
                    ":id",
                    "dataSets"
                  ],
                  "query": [
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    },
                    {
                      "key": "tags",
                      "value": "{{tags}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for connections",
          "_postman_isSubFolder": true
        },
        {
          "name": "connectors",
          "item": [
            {
              "name": "Fetches the list of Connectors.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connectors?version={{version}}&type={{type}}&name={{name}}&category={{category}}&description={{description}}&maxConnections={{maxConnections}}&uiCreationAllowed={{uiCreationAllowed}}&connectorOwnedDataSets={{connectorOwnedDataSets}}&internal={{internal}}&ingestStart={{ingestStart}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "connectors"],
                  "query": [
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "type",
                      "value": "{{type}}"
                    },
                    {
                      "key": "name",
                      "value": "{{name}}"
                    },
                    {
                      "key": "category",
                      "value": "{{category}}"
                    },
                    {
                      "key": "description",
                      "value": "{{description}}"
                    },
                    {
                      "key": "maxConnections",
                      "value": "{{maxConnections}}"
                    },
                    {
                      "key": "uiCreationAllowed",
                      "value": "{{uiCreationAllowed}}"
                    },
                    {
                      "key": "connectorOwnedDataSets",
                      "value": "{{connectorOwnedDataSets}}"
                    },
                    {
                      "key": "internal",
                      "value": "{{internal}}"
                    },
                    {
                      "key": "ingestStart",
                      "value": "{{ingestStart}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches Connectors by ID.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connectors/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "connectors",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches statistics for a given Connector.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/connectors/:id/stats",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "connectors",
                    ":id",
                    "stats"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for connectors",
          "_postman_isSubFolder": true
        },
        {
          "name": "dataSets",
          "item": [
            {
              "name": "Fetches a list of DataSets.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets?version={{version}}&created={{created}}&updated={{updated}}&createdClient={{createdClient}}&createdUser={{createdUser}}&updatedUser={{updatedUser}}&connectorId={{connectorId}}&connectionId={{connectionId}}&name={{name}}&description={{description}}&type={{type}}&state={{state}}&namespace={{namespace}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}&tags={{tags}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSets"],
                  "query": [
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "created",
                      "value": "{{created}}"
                    },
                    {
                      "key": "updated",
                      "value": "{{updated}}"
                    },
                    {
                      "key": "createdClient",
                      "value": "{{createdClient}}"
                    },
                    {
                      "key": "createdUser",
                      "value": "{{createdUser}}"
                    },
                    {
                      "key": "updatedUser",
                      "value": "{{updatedUser}}"
                    },
                    {
                      "key": "connectorId",
                      "value": "{{connectorId}}"
                    },
                    {
                      "key": "connectionId",
                      "value": "{{connectionId}}"
                    },
                    {
                      "key": "name",
                      "value": "{{name}}"
                    },
                    {
                      "key": "description",
                      "value": "{{description}}"
                    },
                    {
                      "key": "type",
                      "value": "{{type}}"
                    },
                    {
                      "key": "state",
                      "value": "{{state}}"
                    },
                    {
                      "key": "namespace",
                      "value": "{{namespace}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    },
                    {
                      "key": "tags",
                      "value": "{{tags}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Saves a new DataSet.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Data set to be posted"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets?requestDataSource={{requestDataSource}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSets"],
                  "query": [
                    {
                      "key": "requestDataSource",
                      "value": "{{requestDataSource}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches DataSets by ID.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSets", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates an existing DataSet by ID.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Data set field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id?requestDataSource={{requestDataSource}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSets", ":id"],
                  "query": [
                    {
                      "key": "requestDataSource",
                      "value": "{{requestDataSource}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates specified attributes of an existing DataSet.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Data set field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSets", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Deletes a DataSet by ID.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSets", ":id"],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches credentials for the given dataSet.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/credentials?batchId={{batchId}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "credentials"
                  ],
                  "query": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Lists DataSetViews for this DataSet.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/views?orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "views"
                  ],
                  "query": [
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Creates a new DataSetView for this dataSet.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Datasetview to be posted"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/views",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "views"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches a particular DataSetView for this DataSet.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/views/:viewid",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "views",
                    ":viewid"
                  ],
                  "variable": [
                    {
                      "key": "viewid",
                      "value": "{{viewid}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Lists the Transforms for a particular dataSetView for this dataSet.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/views/:viewId/transforms?orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "views",
                    ":viewId",
                    "transforms"
                  ],
                  "query": [
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "viewId",
                      "value": "{{viewId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Lists the dataSetFiles for a particular dataSetView for this dataSet.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/views/:viewId/files?orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "views",
                    ":viewId",
                    "files"
                  ],
                  "query": [
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "viewId",
                      "value": "{{viewId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Adds DataSetFile to a particular DataSetView for this DataSet.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Data set file to be posted."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/views/:viewId/files",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "views",
                    ":viewId",
                    "files"
                  ],
                  "variable": [
                    {
                      "key": "viewId",
                      "value": "{{viewId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches a dataSetFile for a particular dataSetView for this dataSet.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/views/:viewId/files/:fileId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "views",
                    ":viewId",
                    "files",
                    ":fileId"
                  ],
                  "variable": [
                    {
                      "key": "viewId",
                      "value": "{{viewId}}"
                    },
                    {
                      "key": "fileId",
                      "value": "{{fileId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Removes a DataSetFile for a particular DataSetView for this DataSet.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/views/:viewId/files/:fileId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "views",
                    ":viewId",
                    "files",
                    ":fileId"
                  ],
                  "variable": [
                    {
                      "key": "viewId",
                      "value": "{{viewId}}"
                    },
                    {
                      "key": "fileId",
                      "value": "{{fileId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Retrieves summarized stats for a DataSet's batches. Default time window: last seven days.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/ingestBatchSummary?createdBefore={{createdBefore}}&createdAfter={{createdAfter}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}&tags={{tags}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "ingestBatchSummary"
                  ],
                  "query": [
                    {
                      "key": "createdBefore",
                      "value": "{{createdBefore}}"
                    },
                    {
                      "key": "createdAfter",
                      "value": "{{createdAfter}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    },
                    {
                      "key": "tags",
                      "value": "{{tags}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Returns the DULE labels associated with a dataset.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/:id/dule",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSets",
                    ":id",
                    "dule"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for dataSets",
          "_postman_isSubFolder": true
        },
        {
          "name": "dataSetViews",
          "item": [
            {
              "name": "Fetches a list of DataSetViews.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetViews?version={{version}}&created={{created}}&updated={{updated}}&createdClient={{createdClient}}&createdUser={{createdUser}}&updatedUser={{updatedUser}}&dataSetId={{dataSetId}}&name={{name}}&isDefault={{isDefault}}&status={{status}}&editable={{editable}}&sdsVersion={{sdsVersion}}&basePath={{basePath}}&saveStrategy={{saveStrategy}}&isCached={{isCached}}&aspect={{aspect}}&schema={{schema}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSetViews"],
                  "query": [
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "created",
                      "value": "{{created}}"
                    },
                    {
                      "key": "updated",
                      "value": "{{updated}}"
                    },
                    {
                      "key": "createdClient",
                      "value": "{{createdClient}}"
                    },
                    {
                      "key": "createdUser",
                      "value": "{{createdUser}}"
                    },
                    {
                      "key": "updatedUser",
                      "value": "{{updatedUser}}"
                    },
                    {
                      "key": "dataSetId",
                      "value": "{{dataSetId}}"
                    },
                    {
                      "key": "name",
                      "value": "{{name}}"
                    },
                    {
                      "key": "isDefault",
                      "value": "{{isDefault}}"
                    },
                    {
                      "key": "status",
                      "value": "{{status}}"
                    },
                    {
                      "key": "editable",
                      "value": "{{editable}}"
                    },
                    {
                      "key": "sdsVersion",
                      "value": "{{sdsVersion}}"
                    },
                    {
                      "key": "basePath",
                      "value": "{{basePath}}"
                    },
                    {
                      "key": "saveStrategy",
                      "value": "{{saveStrategy}}"
                    },
                    {
                      "key": "isCached",
                      "value": "{{isCached}}"
                    },
                    {
                      "key": "aspect",
                      "value": "{{aspect}}"
                    },
                    {
                      "key": "schema",
                      "value": "{{schema}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Saves a new dataSetView.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "DataSetView to be posted."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetViews",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSetViews"]
                }
              },
              "response": []
            },
            {
              "name": "Fetches DataSetViews by ID.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetViews/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSetViews",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates an existing DataSetView by ID.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "DataSetViews to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetViews/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSetViews",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates specified attributes of an existing DataSetView.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Data set view field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetViews/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSetViews",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Deletes a DataSetView by ID.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetViews/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSetViews",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Lists DataSetViews dependent on the current DataSetView.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetViews/:id/children?version={{version}}&created={{created}}&updated={{updated}}&createdClient={{createdClient}}&createdUser={{createdUser}}&updatedUser={{updatedUser}}&dataSetId={{dataSetId}}&name={{name}}&isDefault={{isDefault}}&editable={{editable}}&sdsVersion={{sdsVersion}}&basePath={{basePath}}&isCached={{isCached}}&status={{status}}&saveStrategy={{saveStrategy}}&aspect={{aspect}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSetViews",
                    ":id",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "created",
                      "value": "{{created}}"
                    },
                    {
                      "key": "updated",
                      "value": "{{updated}}"
                    },
                    {
                      "key": "createdClient",
                      "value": "{{createdClient}}"
                    },
                    {
                      "key": "createdUser",
                      "value": "{{createdUser}}"
                    },
                    {
                      "key": "updatedUser",
                      "value": "{{updatedUser}}"
                    },
                    {
                      "key": "dataSetId",
                      "value": "{{dataSetId}}"
                    },
                    {
                      "key": "name",
                      "value": "{{name}}"
                    },
                    {
                      "key": "isDefault",
                      "value": "{{isDefault}}"
                    },
                    {
                      "key": "editable",
                      "value": "{{editable}}"
                    },
                    {
                      "key": "sdsVersion",
                      "value": "{{sdsVersion}}"
                    },
                    {
                      "key": "basePath",
                      "value": "{{basePath}}"
                    },
                    {
                      "key": "isCached",
                      "value": "{{isCached}}"
                    },
                    {
                      "key": "status",
                      "value": "{{status}}"
                    },
                    {
                      "key": "saveStrategy",
                      "value": "{{saveStrategy}}"
                    },
                    {
                      "key": "aspect",
                      "value": "{{aspect}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for dataSetViews",
          "_postman_isSubFolder": true
        },
        {
          "name": "dataSetFiles",
          "item": [
            {
              "name": "Fetches a list of DataSetFiles.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetFiles?version={{version}}&created={{created}}&createdClient={{createdClient}}&createdAfter={{createdAfter}}&createdBefore={{createdBefore}}&updated={{updated}}&createdUser={{createdUser}}&updatedUser={{updatedUser}}&folderName={{folderName}}&batchId={{batchId}}&dataSetViewId={{dataSetViewId}}&records={{records}}&size={{size}}&isValid={{isValid}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSetFiles"],
                  "query": [
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "created",
                      "value": "{{created}}"
                    },
                    {
                      "key": "createdClient",
                      "value": "{{createdClient}}"
                    },
                    {
                      "key": "createdAfter",
                      "value": "{{createdAfter}}"
                    },
                    {
                      "key": "createdBefore",
                      "value": "{{createdBefore}}"
                    },
                    {
                      "key": "updated",
                      "value": "{{updated}}"
                    },
                    {
                      "key": "createdUser",
                      "value": "{{createdUser}}"
                    },
                    {
                      "key": "updatedUser",
                      "value": "{{updatedUser}}"
                    },
                    {
                      "key": "folderName",
                      "value": "{{folderName}}"
                    },
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    },
                    {
                      "key": "dataSetViewId",
                      "value": "{{dataSetViewId}}"
                    },
                    {
                      "key": "records",
                      "value": "{{records}}"
                    },
                    {
                      "key": "size",
                      "value": "{{size}}"
                    },
                    {
                      "key": "isValid",
                      "value": "{{isValid}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Saves a new DataSetFile.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Data set file to be posted."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetFiles",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSetFiles"]
                }
              },
              "response": []
            },
            {
              "name": "Deletes a DataSetFile based on a search criteria.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetFiles?batchId={{batchId}}&property={{property}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "dataSetFiles"],
                  "query": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches DataSetFiles by ID.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetFiles/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSetFiles",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates an existing DataSetFile by ID.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Data set file field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetFiles/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSetFiles",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates specified attributes of an existing DataSetFile.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "DataSetFile field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetFiles/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSetFiles",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Deletes a DataSetFile by ID.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSetFiles/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "dataSetFiles",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for dataSetFiles",
          "_postman_isSubFolder": true
        },
        {
          "name": "transforms",
          "item": [
            {
              "name": "Fetches a list of Transforms.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms?version={{version}}&updated={{updated}}&createdClient={{createdClient}}&createdUser={{createdUser}}&updatedUser={{updatedUser}}&name={{name}}&body={{body}}&order={{order}}&created={{created}}&language={{language}}&codeUrl={{codeUrl}}&vehicleUrl={{vehicleUrl}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "transforms"],
                  "query": [
                    {
                      "key": "version",
                      "value": "{{version}}"
                    },
                    {
                      "key": "updated",
                      "value": "{{updated}}"
                    },
                    {
                      "key": "createdClient",
                      "value": "{{createdClient}}"
                    },
                    {
                      "key": "createdUser",
                      "value": "{{createdUser}}"
                    },
                    {
                      "key": "updatedUser",
                      "value": "{{updatedUser}}"
                    },
                    {
                      "key": "name",
                      "value": "{{name}}"
                    },
                    {
                      "key": "body",
                      "value": "{{body}}"
                    },
                    {
                      "key": "order",
                      "value": "{{order}}"
                    },
                    {
                      "key": "created",
                      "value": "{{created}}"
                    },
                    {
                      "key": "language",
                      "value": "{{language}}"
                    },
                    {
                      "key": "codeUrl",
                      "value": "{{codeUrl}}"
                    },
                    {
                      "key": "vehicleUrl",
                      "value": "{{vehicleUrl}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Saves a new Transform.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Transform to be posted"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "transforms"]
                }
              },
              "response": []
            },
            {
              "name": "Fetches Transforms by ID.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates an existing Transform by ID.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Transform field(s) to be updated."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates specified attributes of an existing transform.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Deletes a Transform by ID.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches inputs for a specific Transform.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id/inputs?orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}&tags={{tags}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id",
                    "inputs"
                  ],
                  "query": [
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    },
                    {
                      "key": "tags",
                      "value": "{{tags}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates inputs attributes of an existing transform.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Array[ {\"dataSet\": \"@/dataSets/dataSetId\"}]"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id/inputs",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id",
                    "inputs"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches outputs for a specific Transform.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id/outputs?orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}&tags={{tags}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id",
                    "outputs"
                  ],
                  "query": [
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    },
                    {
                      "key": "tags",
                      "value": "{{tags}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Updates outputs attributes of an existing transform.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "if-match",
                    "value": "{{if-match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "array of outputs for the transforms"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id/outputs",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id",
                    "outputs"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches an input DataSet for the specified Transform.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id/inputs/:dataSetId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id",
                    "inputs",
                    ":dataSetId"
                  ],
                  "variable": [
                    {
                      "key": "dataSetId",
                      "value": "{{dataSetId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Deletes an input DataSet for the specified Transform.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id/inputs/:dataSetId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id",
                    "inputs",
                    ":dataSetId"
                  ],
                  "variable": [
                    {
                      "key": "dataSetId",
                      "value": "{{dataSetId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fetches an output DataSet for the specified Transform.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id/outputs/:dataSetId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id",
                    "outputs",
                    ":dataSetId"
                  ],
                  "variable": [
                    {
                      "key": "dataSetId",
                      "value": "{{dataSetId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Deletes an output DataSet for the specified Transform.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/transforms/:id/outputs/:dataSetId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "transforms",
                    ":id",
                    "outputs",
                    ":dataSetId"
                  ],
                  "variable": [
                    {
                      "key": "dataSetId",
                      "value": "{{dataSetId}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for transforms",
          "_postman_isSubFolder": true
        },
        {
          "name": "xdms",
          "item": [
            {
              "name": "Return a list of all XDM schema or view a specific schema using the {id} query parameter.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms?orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}&xdmVersion={{xdmVersion}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "xdms"],
                  "query": [
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    },
                    {
                      "key": "xdmVersion",
                      "value": "{{xdmVersion}}"
                    }
                  ]
                },
                "description": "<p>A GET request to /xdms returns a list of all XDM schema within the organization, including standard schemas, customer-defined schemas, and customer-defined extensions to standard schemas. Including the {id} query parameter in the GET request returns the details of the specific schema with that {id}.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>The response body contains an array of objects with one object for each \"namespace\". The \"paths\" array inside each object then lists the path to each individual schema. The schema are shown in the format \"@/xdms/{id}\", where {id} is \"namespace/objectName\". See example in the Response section below.</p><br/><p>When the {id} is used as a query parameter, the request returns a specific schema, including all fields and metadata for that schema.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms?id=context/person \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Return details for every schema in a specific {namespace}, including fields and metadata.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/:namespace?excludeExtension={{excludeExtension}}&orderBy={{orderBy}}&limit={{limit}}&start={{start}}&property={{property}}&properties={{properties}}&xdmVersion={{xdmVersion}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    ":namespace"
                  ],
                  "query": [
                    {
                      "key": "excludeExtension",
                      "value": "{{excludeExtension}}"
                    },
                    {
                      "key": "orderBy",
                      "value": "{{orderBy}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "properties",
                      "value": "{{properties}}"
                    },
                    {
                      "key": "xdmVersion",
                      "value": "{{xdmVersion}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "namespace"
                    }
                  ]
                },
                "description": "<p>To view all schema within a specific namespace, issue a GET request to /xdms/{namespace}. </p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/context \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>The response body is a single object containing top level fields for each schema in the {namespace}. The individual schema objects contain the fields and metadata for that schema. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Return details for a specific schema. Equivalent to GET /xdms?id={id}.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/:namespace/:objectName?expansion={{expansion}}&excludeExtension={{excludeExtension}}&xdmVersion={{xdmVersion}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    ":namespace",
                    ":objectName"
                  ],
                  "query": [
                    {
                      "key": "expansion",
                      "value": "{{expansion}}"
                    },
                    {
                      "key": "excludeExtension",
                      "value": "{{excludeExtension}}"
                    },
                    {
                      "key": "xdmVersion",
                      "value": "{{xdmVersion}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "objectName",
                      "value": "{{objectName}}"
                    }
                  ]
                },
                "description": "<p>To view details for a specific schema, including all fields and metadata, issue a GET request to /xdms/{namespace}/{objectName}. This is equivalent to using the {id} query parameter in a GET /xdms request. </p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/context/person \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>The response body is a single object containing the schema, its fields, and related metadata. Setting the query parameter 'excludeExtension' returns the schema with or without the \"_customer\" extension. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Return details for every schema defined by the IMS Org.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "xdms", "_customer"]
                },
                "description": "<p><strong>Understanding the <code>_customer</code> Keyword:</strong></p><br/><p>_customer is a short-hand representation of an individual IMS Organization. Instead of needing to enter the full IMS Org for every call, the API uses _customer instead. _customer represents the unique customer section that every Adobe provided schema can have. Behind the scenes, the schema registry converts _customer and stores everything under the related IMS Org. Within the registry, a single IMS Org has access to all of its _customer extensions and schemas. It is not possible for IMS Orgs to see _customer extensions or schemas from other organizations.</p><br/><p>To view the details for every schema defined by the IMS Org, issue a GET request to /xdms/_customer. </p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>The response body is a single object containing top level fields for each customer-defined schema. The individual schema objects contain the fields and metadata for that schema. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Return a list of all customer-defined schema within a specific namespace.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/:extensionNS",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    "_customer",
                    ":extensionNS"
                  ],
                  "variable": [
                    {
                      "key": "extensionNS"
                    }
                  ]
                },
                "description": "<p>A GET request to /xdms/_customer/{extensionNS} returns a list of all customer-defined schema within the specified \"extension namespace\". Customer-defined namespaces are unique to each IMS Org and are referred to as \"extension namespaces\" to avoid confusion with Adobe-defined \"namespaces\" that are available to all users.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/retail \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>The response body is an array containing every schema in the specified \"namespace\". The schema are shown in the format \"@/xdms/_customer/{id}\", where {id} is the \"extensionNS/objectName\". See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Return details for a specific customer-defined schema.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/:extensionNS/:objectName?expansion={{expansion}}&excludeExtension={{excludeExtension}}&xdmVersion={{xdmVersion}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    "_customer",
                    ":extensionNS",
                    ":objectName"
                  ],
                  "query": [
                    {
                      "key": "expansion",
                      "value": "{{expansion}}"
                    },
                    {
                      "key": "excludeExtension",
                      "value": "{{excludeExtension}}"
                    },
                    {
                      "key": "xdmVersion",
                      "value": "{{xdmVersion}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "objectName",
                      "value": "{{objectName}}"
                    }
                  ]
                },
                "description": "<p>To view details for a specific customer-defined schema, including all fields and metadata, issue a GET request to /xdms/_customer/{extensionNS}/{objectName}.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/web/flights \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>The response body is a single object containing the schema, its fields, and related metadata. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Create or update a customer-defined schema within a specific namespace.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "The payload JSON that goes in the body of the request."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/:extensionNS/:objectName",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    "_customer",
                    ":extensionNS",
                    ":objectName"
                  ],
                  "variable": [
                    {
                      "key": "extensionNS"
                    },
                    {
                      "key": "objectName"
                    }
                  ]
                },
                "description": "<p>A PUT request to /xdms/_customer/{id}, where {id} is the \"extensionNS/objectName\", can be used to both create and update customer-defined schemas within a specific namespace. Individual IMS Orgs can create multiple \"extension namespaces\" to help group schema together (e.g. \"web\" and \"retail\").</p><br/><p>The header 'Content-Type:application/json' must be included in the request, and the request body must include all fields being defined.</p><br/><p><strong>Notes for Updating Schema:</strong></p><br/><p>A PUT request is essentially <em>re-writing</em> the schema. Therefore, the payload of the PUT request must include ALL fields (old and new) that are to be included in the schema. It is recommended to view (GET) the schema first to see the fields that are currently in the schema, then update (PUT) the schema with all fields (those previously defined and those being added) in the request body.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X PUT \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/web/flights \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ <br/>  -H 'content-type:application/json' \\ <br/>  -d '{ <br/>        \"title\":\"Flights\",<br/>        \"type\":\"object\",<br/>        \"description\":\"Data for all available flights.\",<br/>        \"properties\":{ <br/>          \"flightId\":{ <br/>            \"title\":\"Flight ID\",<br/>            \"type\":\"string\", <br/>            \"description\":\"The unique ID of the flight.\"<br/>           }, <br/>          \"flightNumber\":{ <br/>            \"title\":\"Flight Number\", <br/>            \"type\":\"string\", <br/>            \"description\":\"Flight Number provided by the carrier.\" <br/>           },<br/>          \"carrier\":{ <br/>             \"title\":\"Carrier\", <br/>             \"type\":\"string\", <br/>             \"description\":\"Name of the flight carrier.\" <br/>           }<br/>         } <br/>       }' </pre><br/><p>The response to this request is an array containing a single path to the created or updated schema. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Create a new customer-defined schema within a specific namespace.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "The payload JSON that goes in the body of the request."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/:extensionNS/:objectName",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    "_customer",
                    ":extensionNS",
                    ":objectName"
                  ],
                  "variable": [
                    {
                      "key": "extensionNS"
                    },
                    {
                      "key": "objectName"
                    }
                  ]
                },
                "description": "<p>If an existing schema is not available as a starting point, a new schema can be created by issuing a POST request to /xdms/_customer/{id}, where {id} is the \"extensionNS/objectName\". Individual IMS Orgs can create multiple \"extension namespaces\" to help group schema together (e.g. \"web\" and \"retail\").</p><br/><p>The header 'Content-Type:application/json' must be included in the request, and the request body must include all fields being defined.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X POST \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/web/flights \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ <br/>  -H 'content-type:application/json' \\ <br/>  -d '{ <br/>        \"title\":\"Flights\",<br/>        \"type\":\"object\",<br/>        \"description\":\"Data for all available flights.\",<br/>        \"properties\":{ <br/>          \"flightId\" { <br/>            \"title\":\"Flight ID\",<br/>            \"type\":\"string\", <br/>            \"description\":\"The unique ID of the flight.\"<br/>           }, <br/>          \"flightNumber\" { <br/>            \"title\":\"Flight Number\", <br/>            \"type\":\"string\", <br/>            \"description\":\"Flight Number provided by the carrier.\" <br/>           }<br/>         } <br/>      }' </pre><br/><p>The response to this request is an array containing a single path to the newly created schema. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Remove customer-defined schema.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/:extensionNS/:objectName",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    "_customer",
                    ":extensionNS",
                    ":objectName"
                  ],
                  "variable": [
                    {
                      "key": "extensionNS"
                    },
                    {
                      "key": "objectName"
                    }
                  ]
                },
                "description": "<p>An IMS Org is able to remove a schema that it has defined by issuing a DELETE request to /xdms/_customer/{id}, where {id} is the \"extensionNS/objectName\" of the schema to be deleted. <strong>This action cannot be undone.</strong></p><br/><p>Platform does not support breaking changes, therefore deleting schemas is not recommended and should only be done if absolutely necessary.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X DELETE \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/_customer/web/flights \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ <br/>   </pre><br/><p>The response to this request is an array containing a single path to the deleted schema. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Return a list of all customer-defined extensions for a specific schema.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/:namespace/:objectName/_customer?expansion={{expansion}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    ":namespace",
                    ":objectName",
                    "_customer"
                  ],
                  "query": [
                    {
                      "key": "expansion",
                      "value": "{{expansion}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "namespace"
                    },
                    {
                      "key": "objectName"
                    }
                  ]
                },
                "description": "<p>An IMS Org may define multiple extensions to a single standard schema. Extensions are used to express non-standard data unique to the organization. To view a list of extensions on a specific schema, issue a GET request to /xdms/{id}/_customer/, where {id} is the \"namespace/objectName\" of the standard schema.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/context/person/_customer \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>The response body is an array containing the path for each customer-defined extension. The extensions are shown in the format \"@/xdms/{id}/_customer/{extensionNS}\". See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Return the details for a specific extension to the specified schema.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/:namespace/:objectName/_customer/:extensionNS?expansion={{expansion}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    ":namespace",
                    ":objectName",
                    "_customer",
                    ":extensionNS"
                  ],
                  "query": [
                    {
                      "key": "expansion",
                      "value": "{{expansion}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "namespace"
                    },
                    {
                      "key": "objectName"
                    },
                    {
                      "key": "extensionNS"
                    }
                  ]
                },
                "description": "<p>To view the details for a specific customer-defined extension, including all fields and metadata, issue a GET request to /xdms/{id}/_customer/{extensionNS}.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/context/person/_customer/retail \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>The response body is a single object containing the extension, its fields, and related metadata. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Create or update a specific extension to the specified schema.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "The payload JSON that goes in the body of the request."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/:namespace/:objectName/_customer/:extensionNS",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    ":namespace",
                    ":objectName",
                    "_customer",
                    ":extensionNS"
                  ],
                  "variable": [
                    {
                      "key": "namespace"
                    },
                    {
                      "key": "objectName"
                    },
                    {
                      "key": "extensionNS"
                    }
                  ]
                },
                "description": "<p>To express non-standard data that is unique to an organization, IMS Orgs may define extensions to standard schemas. These extensions can be created and/or updated by issuing a PUT request to /xdms/{id}/_customer/{extensionNS}, where {id} is the \"namespace/objectName\" of the schema being extending and {extensionNS} is the customer-defined \"extension namespace\" in which the custom fields appear.</p><br/><p>Extensions are unique to each IMS Org, meaning they are not visible to other organizations. Individual IMS Orgs can create multiple \"extension namespaces\" on a single schema (e.g. \"web\" and \"retail\").</p><br/><p><strong>Notes for Updating Extensions:</strong></p><br/><p>A PUT request is essentially <em>re-writing</em> the extension. Therefore, the payload of the PUT request must include ALL fields (old and new) that are to be included in the schema extension. It is recommended to view (GET) the extension first to see the fields that are currently in the extension, then update (PUT) the extension with all fields (those previously defined and those being added) in the request body.</p><br/><p>The header 'Content-Type:application/json' must be included in the request, and the request body must include all fields (old and new) being included.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X PUT \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/context/person/_customer/customer/retail \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ <br/>  -H 'content-type:application/json' \\ <br/>  -d '{ <br/>        \"title\":\"Retail Fields\",<br/>        \"type\":\"object\",<br/>        \"description\":\"Custom fields for Retail division.\",<br/>        \"properties\":{ <br/>          \"homeStoreId\":{ <br/>            \"title\":\"Home Store Id\",<br/>            \"type\":\"string\", <br/>            \"description\":\"Unique ID of the home store.\"<br/>           }, <br/>          \"loyaltyMember\":{ <br/>            \"title\":\"Loyalty Program Member\", <br/>            \"type\":\"boolean\", <br/>            \"default\":false,<br/>            \"description:\"Is this individual a member of the Loyalty Program?\" <br/>           },<br/>          \"loyaltyJoinDate\":{<br/>            \"title\":\"Loyalty Program Join Date\",<br/>            \"type\":\"string\",<br/>            \"format\":\"date\",<br/>           \"description\":\"Date individual joined the Loyalty Program.\"<br/>           }<br/>         } <br/>       }' </pre><br/><p>The response to this request is an array containing a single path to the created or updated schema extension. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Create an extension to the specified schema.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "The payload JSON that goes in the body of the request."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/:namespace/:objectName/_customer/:extensionNS",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    ":namespace",
                    ":objectName",
                    "_customer",
                    ":extensionNS"
                  ],
                  "variable": [
                    {
                      "key": "namespace"
                    },
                    {
                      "key": "objectName"
                    },
                    {
                      "key": "extensionNS"
                    }
                  ]
                },
                "description": "<p>To express non-standard data that is unique to an organization, IMS Orgs may define extensions to standard schemas. Creating an extension is done by issuing a POST request to /xdms/{id}/_customer/{extensionNS}, where {id} is the \"namespace/objectName\" of the schema being extending and {extensionNS} is the customer-defined \"extension namespace\" in which the custom fields will appear.</p><br/><p>Extensions are unique to each IMS Org, meaning they are not visible to other organizations. Individual IMS Orgs can create multiple \"extension namespaces\" on a single schema (e.g. \"web\" and \"retail\").</p><br/><p>The header 'Content-Type:application/json' must be included in the request, and the request body must include all fields being defined.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X POST \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/content/person/_customer/customer/retail \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ <br/>  -H 'content-type:application/json' \\ <br/>  -d '{ <br/>        \"title\":\"Retail Fields\",<br/>        \"type\":\"object\",<br/>        \"description\":\"Custom fields for Retail division.\",<br/>        \"properties\":{ <br/>          \"homeStoreId\":{ <br/>            \"title\":\"Home Store Id\",<br/>            \"type\":\"string\", <br/>            \"description\":\"Unique ID of the home store.\"<br/>           }, <br/>          \"loyaltyMember\":{ <br/>            \"title\":\"Loyalty Program Member\", <br/>            \"type\":\"boolean\", <br/>            \"default\":false,<br/>            \"description\":\"Is this individual a member of the Loyalty Program?\" <br/>           }<br/>         } <br/>       }' </pre><br/><p>The response to this request is an array containing a single path to the newly created schema extension. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Remove customer-defined extension.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/:namespace/:objectName/_customer/:extensionNS",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "xdms",
                    ":namespace",
                    ":objectName",
                    "_customer",
                    ":extensionNS"
                  ],
                  "variable": [
                    {
                      "key": "namespace"
                    },
                    {
                      "key": "objectName"
                    },
                    {
                      "key": "extensionNS"
                    }
                  ]
                },
                "description": "<p>An IMS Org is able to remove an extension that it has defined by issuing a DELETE request to /xdms/{id}/_customer/{extensionNS}, where {id} is the \"namespace/objectName\" of the schema on which the extension was defined. <strong>This action cannot be undone.</strong></p><br/><p>Platform does not support breaking changes, therefore deleting extensions is not recommended and should only be done if absolutely necessary.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X DELETE \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/xdms/context/person/_customer/retail \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ <br/>   </pre><br/><p>The response to this request is an array containing a single path to the deleted extension. See example in the Response section below.</p><br/><p>More information regarding how to use the Schema Registry API is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            }
          ],
          "description": "Folder for xdms",
          "_postman_isSubFolder": true
        },
        {
          "name": "descriptors",
          "item": [
            {
              "name": "Return a list of every {descriptorId} within the organization, organized by type.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors?descriptorType={{descriptorType}}&sourceSchema={{sourceSchema}}&destSchema={{destSchema}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "descriptors"],
                  "query": [
                    {
                      "key": "descriptorType",
                      "value": "{{descriptorType}}"
                    },
                    {
                      "key": "sourceSchema",
                      "value": "{{sourceSchema}}"
                    },
                    {
                      "key": "destSchema",
                      "value": "{{destSchema}}"
                    }
                  ]
                },
                "description": "<p>A single GET request returns a list of all descriptors within the organization.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>If descriptors exist, the response is an array of objects with one object for each \"descriptorType\" the organization has defined (i.e. if there are no descriptors with a \"descriptorType\" of \"schema\", there would not be a \"descriptorType\":\"schema\" object). The \"descriptors\" array inside each object then lists the paths to the individual descriptors of that type. The descriptors are shown in the format \"@/descriptors/{descriptorId}\". See example in the Response section below.</p><br/><p><strong>Query Parameters:</strong><br/><br/>The GET request can be refined using query parameter filters. Supported filters include descriptorType, sourceSchema, and destSchema.</p><br/><pre>GET /descriptors?descriptorType=string&sourceSchema=directory/schema&destSchema=directory/schema2<br/><br/>GET /descriptors?descriptorType=relationship<br/>GET /descriptors?sourceSchema=_customer/web/flights<br/>GET /descriptors?destSchema=context/person<br/>GET /descriptors?type=relationship&sourceSchema=_customer/web/flights&destSchema=context/person</pre><br/><p>More information about working with Schema Descriptors is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md#schemadescriptors\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Create a new descriptor. Required fields in payload vary based on @type.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "The descriptor payload JSON that goes in the body of the request."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "catalog", "descriptors"]
                },
                "description": "<p>To create a new descriptor, issue a POST request to /descriptors with a payload that includes all of the required fields. Required fields vary by @type specified, with select descriptor types (e.g. \"xdm:updateMerge\") requiring two separate calls to define them.</p><br/><p>Details on descriptor types, including code samples, are available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md#descriptor-types\" target=\"_blank\">Descriptor Types</a> table in the Schema Registry Developer Guide.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X POST \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'Content-Type:application/json' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ <br/>  -d '{ <br/>    \"@type\":\"xdm:descriptorPrimaryKey\",<br/>    \"xdm:sourceSchema\":\"_customer/web/flights\", <br/>    \"xdm:sourceProperty\":\"/flightId\" <br/>  }'</pre><br/><p>The POST request response is an object containing the {descriptorId} of the new descriptor. See Response section below.</p><p><br/><strong>Available Descriptor @type Values:</strong></p><br/><pre>xdm:descriptorPrimaryKey<br/>xdm:descriptorOneToOne<br/>xdm:descriptorOneToMany<br/>xdm:descriptorManyToMany<br/>xdm:updatePolicy</pre><br/><p>More information about working with Schema Descriptors is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md#schemadescriptors\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Return a specific descriptor using its {descriptorId}.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors/:descriptorId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "descriptors",
                    ":descriptorId"
                  ],
                  "variable": [
                    {
                      "key": "descriptorId"
                    }
                  ]
                },
                "description": "<p>Details related to individual descriptors can be viewed in JSON format by issuing a GET request to /descriptors/{descriptorId}.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X GET \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors/061fc9ac5e2ac791bb664eb1ad1503bd50e96ad6 \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>This request returns an object containing the descriptor and associated metadata. See example in Response section below.<br/><br/>More information about working with Schema Descriptors is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md#schemadescriptors\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Update individual descriptor. Required fields in payload vary based on @type.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "The descriptor payload JSON that goes in the body of the request."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors/:descriptorId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "descriptors",
                    ":descriptorId"
                  ],
                  "variable": [
                    {
                      "key": "descriptorId"
                    }
                  ]
                },
                "description": "<p>Updating an existing descriptor is done through a PUT request to the {descriptorId} of the descriptor being updated.<br/><br/>This action is <em>re-writing</em> the existing descriptor, therefore the payload must include all necessary descriptor fields in order to ensure the descriptor is updated correctly.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X PUT \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors/061fc9ac5e2ac791bb664eb1ad1503bd50e96ad6 \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'Content-Type:application/json' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ <br/>  -d '{ <br/>    \"@type\":\"xdm:descriptorPrimaryKey\",<br/>    \"xdm:sourceSchema\":\"_customer/web/flights\", <br/>    \"xdm:sourceProperty\":\"/flightNumber\" <br/>  }'</pre><br/><p>A successful PUT request will return the {descriptorId} of the updated descriptor. This should be the same as the {descriptorId} used in the request. See example in the Response section below.</p><br/><p>More information about working with Schema Descriptors is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md#schemadescriptors\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            },
            {
              "name": "Remove descriptor using its {descriptorId}.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors/:descriptorId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "descriptors",
                    ":descriptorId"
                  ],
                  "variable": [
                    {
                      "key": "descriptorId"
                    }
                  ]
                },
                "description": "<p>Removing an existing descriptor is done through a DELETE request to the {descriptorId} of the descriptor being removed.</p><br/><p><strong>Sample Request:</strong></p><br/><pre>curl -X DELETE \\ <br/>  https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/descriptors/061fc9ac5e2ac791bb664eb1ad1503bd50e96ad6 \\  <br/>  -H 'Authorization:Bearer {ACCESS_TOKEN}' \\ <br/>  -H 'x-api-key:{API_KEY}' \\ <br/>  -H 'x-gw-ims-org-id:{IMS_ORG}' \\ </pre><br/><p>There is no response body for a DELETE request. A successful deletion will return HTTP Status Code 204 (No-content). See example in Response section below.<br/><br/>More information about working with Schema Descriptors is available in the <a href=\"https://www.adobe.io/apis/cloudplatform/dataservices/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/acp_schema_registry.md#schemadescriptors\" target=\"_blank\">Schema Registry Developer Guide</a>.</p>"
              },
              "response": []
            }
          ],
          "description": "Folder for descriptors",
          "_postman_isSubFolder": true
        },
        {
          "name": "tags",
          "item": [
            {
              "name": "This API allows retrieving aggregated values for all tags within an IMS org for given tagNameSpace.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/tags/:tagNamespace",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "catalog",
                    "tags",
                    ":tagNamespace"
                  ],
                  "variable": [
                    {
                      "key": "tagNamespace"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for tags",
          "_postman_isSubFolder": true
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "ccdab2af-5e1a-47ce-a431-72ff5ae969a0",
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "7cb07b1e-c874-4ab3-bc6b-639d05bb8f81",
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "Batch Ingestion",
      "item": [
        {
          "name": "batches",
          "item": [
            {
              "name": "Registers a new batch in Adobe Data Catalog",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Ingest object that contains information needed to create batch"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/import/batches",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "import", "batches"]
                },
                "description": "Creates a new batch in Data Catalog as a first step to bulk data ingestion. The data is uploaded to this batch after which the batch is marked ready for triggering data registration in Catalog"
              },
              "response": []
            },
            {
              "name": "Upload file to a dataset in a batch",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/octet-stream"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/import/batches/:batchId/datasets/:datasetId/files/:filePath",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "import",
                    "batches",
                    ":batchId",
                    "datasets",
                    ":datasetId",
                    "files",
                    ":filePath"
                  ],
                  "variable": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    },
                    {
                      "key": "datasetId",
                      "value": "{{datasetId}}"
                    },
                    {
                      "key": "filePath",
                      "value": "{{filePath}}"
                    }
                  ]
                },
                "description": "For a batch initialized by the bulk ingestion api, this endpoint lets you upload files under datasets. Note that this puts the entire request stream as the file bytes under the path denoted by filePath in the URL and is idempotent. Subsequent calls to this endpoint will replace the file existent on the referenced path. Noe that due to gateway size and timeout limits, there is a size threshold(currently 512MB) beyond which the clients must use the large file upload mechanism."
              },
              "response": []
            },
            {
              "name": "Operate on the identified file",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/import/batches/:batchId/datasets/:datasetId/files/:filePath?action={{action}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "import",
                    "batches",
                    ":batchId",
                    "datasets",
                    ":datasetId",
                    "files",
                    ":filePath"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "{{action}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    },
                    {
                      "key": "datasetId",
                      "value": "{{datasetId}}"
                    },
                    {
                      "key": "filePath",
                      "value": "{{filePath}}"
                    }
                  ]
                },
                "description": "Used to signal intialization and completion of the file that's uploaded in parts"
              },
              "response": []
            },
            {
              "name": "Upload file part to a resumable file being uploaded to a batch dataset",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "Content-Range",
                    "value": "{{Content-Range}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "value": "{{file}}",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/import/batches/:batchId/datasets/:datasetId/files/:filePath",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "import",
                    "batches",
                    ":batchId",
                    "datasets",
                    ":datasetId",
                    "files",
                    ":filePath"
                  ],
                  "variable": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    },
                    {
                      "key": "datasetId",
                      "value": "{{datasetId}}"
                    },
                    {
                      "key": "filePath",
                      "value": "{{filePath}}"
                    }
                  ]
                },
                "description": "Files larger than 512MB are uploaded in parts and this PATCH endpoint provides you a way to upload a part of your large file that was initialized via the POST endpoint above"
              },
              "response": []
            },
            {
              "name": "Get the status of the chunked file uploaded so far",
              "request": {
                "method": "HEAD",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/import/batches/:batchId/datasets/:datasetId/files/:filePath",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "import",
                    "batches",
                    ":batchId",
                    "datasets",
                    ":datasetId",
                    "files",
                    ":filePath"
                  ],
                  "variable": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    },
                    {
                      "key": "datasetId",
                      "value": "{{datasetId}}"
                    },
                    {
                      "key": "filePath",
                      "value": "{{filePath}}"
                    }
                  ]
                },
                "description": "Files larger than 512MB are uploaded in parts and this HEAD endpoint provides you a way get the byte range information received by the server so far."
              },
              "response": []
            },
            {
              "name": "Generates preview for a batch",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/import/batches/:batchId/datasets/:datasetId/preview?format={{format}}&delimiter=,&quote=\"&escape=\\&charset=UTF-8&header=true&nrow=0",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "import",
                    "batches",
                    ":batchId",
                    "datasets",
                    ":datasetId",
                    "preview"
                  ],
                  "query": [
                    {
                      "key": "format",
                      "value": "{{format}}"
                    },
                    {
                      "key": "delimiter",
                      "value": ","
                    },
                    {
                      "key": "quote",
                      "value": "\""
                    },
                    {
                      "key": "escape",
                      "value": "\\"
                    },
                    {
                      "key": "charset",
                      "value": "UTF-8"
                    },
                    {
                      "key": "header",
                      "value": "true"
                    },
                    {
                      "key": "nrow",
                      "value": "0"
                    }
                  ],
                  "variable": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    },
                    {
                      "key": "datasetId",
                      "value": "{{datasetId}}"
                    }
                  ]
                },
                "description": "Generates data preview for the files uploaded to the batch so far. The preview could be generated for all the batch datasets collectively or per selected datasets"
              },
              "response": []
            },
            {
              "name": "Complete batch",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/import/batches/:batchId?action={{action}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "import",
                    "batches",
                    ":batchId"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "{{action}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    }
                  ]
                },
                "description": "Complete the batch to trigger the downstream data promotion workflow"
              },
              "response": []
            }
          ],
          "description": "Folder for batches",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "name": "Data Access",
      "item": [
        {
          "name": "batches",
          "item": [
            {
              "name": "Get dataset files under a batch.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/export/batches/:batchId/files?start={{start}}&limit={{limit}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "export",
                    "batches",
                    ":batchId",
                    "files"
                  ],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    }
                  ]
                },
                "description": "List all dataset files under a batch."
              },
              "response": []
            },
            {
              "name": "Get dataset files under a failed batch",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/export/batches/:batchId/failed?start={{start}}&limit={{limit}}&path={{path}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "export",
                    "batches",
                    ":batchId",
                    "failed"
                  ],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "path",
                      "value": "{{path}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "batchId",
                      "value": "{{batchId}}"
                    }
                  ]
                },
                "description": "List all files under failed batch"
              },
              "response": []
            }
          ],
          "description": "Folder for batches",
          "_postman_isSubFolder": true
        },
        {
          "name": "files",
          "item": [
            {
              "name": "Access / Download a file",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, application/octet-stream"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  },
                  {
                    "key": "Range",
                    "value": "{{Range}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/export/files/:dataSetFileId?start={{start}}&limit={{limit}}&path={{path}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "export",
                    "files",
                    ":dataSetFileId"
                  ],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "path",
                      "value": "{{path}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "dataSetFileId",
                      "value": "{{dataSetFileId}}"
                    }
                  ]
                },
                "description": "Returns either a complete file, or a directory of chunked data that make up the file. The response contains a data array that may contain a single entry, or a list of files belonging to that directory.\n"
              },
              "response": []
            },
            {
              "name": "Get headers regarding a file",
              "request": {
                "method": "HEAD",
                "header": [
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/export/files/:dataSetFileId?path={{path}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "export",
                    "files",
                    ":dataSetFileId"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "{{path}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "dataSetFileId",
                      "value": "{{dataSetFileId}}"
                    }
                  ]
                },
                "description": "Retrieves headers in response with a file's metadata. The response header will indicate information regarding the specified file."
              },
              "response": []
            }
          ],
          "description": "Folder for files",
          "_postman_isSubFolder": true
        },
        {
          "name": "datasets",
          "item": [
            {
              "name": "Preview files",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/export/datasets/:id/preview",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "export",
                    "datasets",
                    ":id",
                    "preview"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                },
                "description": "Preview the first 100 rows of CSV or Parquet files"
              },
              "response": []
            }
          ],
          "description": "Folder for datasets",
          "_postman_isSubFolder": true
        },
        {
          "name": "health-detailed",
          "item": [
            {
              "name": "Perform health check on dependent services",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/export/health-detailed",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "export", "health-detailed"]
                },
                "description": "Returns health status for all dependent services"
              },
              "response": []
            }
          ],
          "description": "Folder for health-detailed",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "name": "Unified Profile Service",
      "item": [
        {
          "name": "configuration",
          "item": [
            {
              "name": "mergePolicies",
              "item": [
                {
                  "name": "Returns a list of Profile Merge Policies.",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/config/mergePolicies?start={{start}}&limit={{limit}}&order={{order}}&id={{id}}",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "config",
                        "mergePolicies"
                      ],
                      "query": [
                        {
                          "key": "start",
                          "value": "{{start}}"
                        },
                        {
                          "key": "limit",
                          "value": "{{limit}}"
                        },
                        {
                          "key": "order",
                          "value": "{{order}}"
                        },
                        {
                          "key": "id",
                          "value": "{{id}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Creates a new Profile MergePolicy",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "Examples coming soon"
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/config/mergePolicies",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "config", "mergePolicies"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Patches a merge policy when provided with merge policy id as query param. Primary use is to make a merge policy default for a (schema,imsOrg) pair",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "Examples coming soon"
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/config/mergePolicies",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "config",
                        "mergePolicies"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "{{id}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Returns the Profile MergePolicy",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/config/mergePolicies/:internalId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "config",
                        "mergePolicies",
                        ":internalId"
                      ],
                      "variable": [
                        {
                          "key": "internalId",
                          "value": "{{internalId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Patches a merge policy given it's internal id. Primary use is to make a merge policy default for a (schema,imsOrg) pair.",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "Examples coming soon"
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/config/mergePolicies/:internalId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "config",
                        "mergePolicies",
                        ":internalId"
                      ],
                      "variable": [
                        {
                          "key": "internalId",
                          "value": "{{internalId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Deletes the mergepolicy given it's internal id",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {},
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/config/mergePolicies/:internalId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "config",
                        "mergePolicies",
                        ":internalId"
                      ],
                      "variable": [
                        {
                          "key": "internalId",
                          "value": "{{internalId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for mergePolicies",
              "_postman_isSubFolder": true
            },
            {
              "name": "health",
              "item": [
                {
                  "name": "Return a health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/config/health",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "config", "health"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "access",
          "item": [
            {
              "name": "entities",
              "item": [
                {
                  "name": "Lookup a merged key-value XDM Model Object or related time-series XDM Model Objects by XID or ID:NS.",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/entities?schema.name={{schema.name}}&relatedSchema.name={{relatedSchema.name}}&entityId={{entityId}}&entityIdNS={{entityIdNS}}&relatedEntityId={{relatedEntityId}}&relatedEntityIdNS={{relatedEntityIdNS}}&fields={{fields}}&mergePolicyId={{mergePolicyId}}&startTime={{startTime}}&endTime={{endTime}}&limit={{limit}}",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "access", "entities"],
                      "query": [
                        {
                          "key": "schema.name",
                          "value": "{{schema.name}}"
                        },
                        {
                          "key": "relatedSchema.name",
                          "value": "{{relatedSchema.name}}"
                        },
                        {
                          "key": "entityId",
                          "value": "{{entityId}}"
                        },
                        {
                          "key": "entityIdNS",
                          "value": "{{entityIdNS}}"
                        },
                        {
                          "key": "relatedEntityId",
                          "value": "{{relatedEntityId}}"
                        },
                        {
                          "key": "relatedEntityIdNS",
                          "value": "{{relatedEntityIdNS}}"
                        },
                        {
                          "key": "fields",
                          "value": "{{fields}}"
                        },
                        {
                          "key": "mergePolicyId",
                          "value": "{{mergePolicyId}}"
                        },
                        {
                          "key": "startTime",
                          "value": "{{startTime}}"
                        },
                        {
                          "key": "endTime",
                          "value": "{{endTime}}"
                        },
                        {
                          "key": "limit",
                          "value": "{{limit}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Put single XDM Model objects into Unified Profile Store.",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "XDM Model objects to be ingested. Each object should be in JSON format."
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/entities",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "access", "entities"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Lookup merged key-value XDM Model Objects by multiple entityIds.",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "XDM Model objects to be put. Each object should be in JSON format."
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/entities",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "access", "entities"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete key-value XDM Objects and related time-series XDM Model Objects by Ids.",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {},
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/entities?schema.name={{schema.name}}&entityId={{entityId}}&entityIdNS={{entityIdNS}}&mergePolicyId={{mergePolicyId}}",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "access", "entities"],
                      "query": [
                        {
                          "key": "schema.name",
                          "value": "{{schema.name}}"
                        },
                        {
                          "key": "entityId",
                          "value": "{{entityId}}"
                        },
                        {
                          "key": "entityIdNS",
                          "value": "{{entityIdNS}}"
                        },
                        {
                          "key": "mergePolicyId",
                          "value": "{{mergePolicyId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for entities",
              "_postman_isSubFolder": true
            },
            {
              "name": "health",
              "item": [
                {
                  "name": "Return a health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/health",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "access", "health"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "export",
          "item": [
            {
              "name": "jobs",
              "item": [
                {
                  "name": "Get list of all Profile export jobs",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/export/jobs?limit={{limit}}&offset={{offset}}",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "export", "jobs"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "{{limit}}"
                        },
                        {
                          "key": "offset",
                          "value": "{{offset}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Posts a Profile Export Job",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      },
                      {
                        "key": "x-profile-instance-id",
                        "value": "{{x-profile-instance-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": " fields - Column filters (comma separated dot notation of columns)\" +\n\nmergePolicy - Takes id and version as nested parameters, if not provided, will take the same value as in segmentId or snapshotName\n\nfilter - Array of segments with either segmentId or snapshotName\n\ndestination - DatasetId where the exported data will be stored\n\nschema - Schema name for the data"
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/export/jobs",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "export", "jobs"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Returns the Profile Export Job",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/export/jobs/:exportJobId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "export",
                        "jobs",
                        ":exportJobId"
                      ],
                      "variable": [
                        {
                          "key": "exportJobId",
                          "value": "{{exportJobId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for jobs",
              "_postman_isSubFolder": true
            },
            {
              "name": "health-detailed",
              "item": [
                {
                  "name": "Return a detailed health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/export/health-detailed",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "export",
                        "health-detailed"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health-detailed",
              "_postman_isSubFolder": true
            },
            {
              "name": "health",
              "item": [
                {
                  "name": "Return a health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/export/health",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "export", "health"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health",
              "_postman_isSubFolder": true
            },
            {
              "name": "ping",
              "item": [
                {
                  "name": "Return a ping message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/export/ping",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "export", "ping"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for ping",
              "_postman_isSubFolder": true
            },
            {
              "name": "version",
              "item": [
                {
                  "name": "Return version information",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/export/version",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "export", "version"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for version",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "segment definition",
          "item": [
            {
              "name": "health-detailed",
              "item": [
                {
                  "name": "Return a detailed health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/health-detailed",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "health-detailed"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health-detailed",
              "_postman_isSubFolder": true
            },
            {
              "name": "health",
              "item": [
                {
                  "name": "Return a health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/health",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "health"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health",
              "_postman_isSubFolder": true
            },
            {
              "name": "ping",
              "item": [
                {
                  "name": "Return a ping message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/ping",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "ping"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for ping",
              "_postman_isSubFolder": true
            },
            {
              "name": "version",
              "item": [
                {
                  "name": "Return version information",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/version",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "version"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for version",
              "_postman_isSubFolder": true
            },
            {
              "name": "segment",
              "item": [
                {
                  "name": "Get list of all Profile segment definitions",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/segment/definitions?limit={{limit}}",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "segment", "definitions"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "{{limit}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Posts a Profile Segment Definition",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "name - Name of the segment\n\nformat - This is the  format of the segment definition. It can take only pql/text and pql/json as of now\n\ndescription - Description of the segment\n\nexpression - PQL expression"
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/segment/definitions",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "segment", "definitions"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Returns the Profile Segment Definition",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/segment/definitions/:segmentId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "segment",
                        "definitions",
                        ":segmentId"
                      ],
                      "variable": [
                        {
                          "key": "segmentId",
                          "value": "{{segmentId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Overwrites a Profile Segment definition",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "name - Name of the segment\n\nformat - This is the  format of the segment. It can take only pql/text and pql/json as of now\n\ndescription - Description of the segment\n\nexpression - PQL expression"
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/segment/definitions/:segmentId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "segment",
                        "definitions",
                        ":segmentId"
                      ],
                      "variable": [
                        {
                          "key": "segmentId",
                          "value": "{{segmentId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Deletes the segment definition given an id",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {},
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/segment/definitions/:segmentId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "segment",
                        "definitions",
                        ":segmentId"
                      ],
                      "variable": [
                        {
                          "key": "segmentId",
                          "value": "{{segmentId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for segment",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "segment jobs",
          "item": [
            {
              "name": "health-detailed",
              "item": [
                {
                  "name": "Return a detailed health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/health-detailed",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "health-detailed"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health-detailed",
              "_postman_isSubFolder": true
            },
            {
              "name": "health",
              "item": [
                {
                  "name": "Return a health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/health",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "health"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health",
              "_postman_isSubFolder": true
            },
            {
              "name": "ping",
              "item": [
                {
                  "name": "Return a ping message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/ping",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "ping"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for ping",
              "_postman_isSubFolder": true
            },
            {
              "name": "version",
              "item": [
                {
                  "name": "Return version information",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/version",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "version"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for version",
              "_postman_isSubFolder": true
            },
            {
              "name": "segment",
              "item": [
                {
                  "name": "Returns the Profile Segment Jobs Request",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/segment/jobs/:segmentJobsRequestId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "segment",
                        "jobs",
                        ":segmentJobsRequestId"
                      ],
                      "variable": [
                        {
                          "key": "segmentJobsRequestId",
                          "value": "{{segmentJobsRequestId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Returns the Profile Segment Jobs Request",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {},
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/segment/jobs/:segmentJobsRequestId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": [
                        "data",
                        "core",
                        "ups",
                        "segment",
                        "jobs",
                        ":segmentJobsRequestId"
                      ],
                      "variable": [
                        {
                          "key": "segmentJobsRequestId",
                          "value": "{{segmentJobsRequestId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get a list of all Profile Segment Jobs Request",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/segment/jobs",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "segment", "jobs"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Posts a Profile Segment Jobs Request",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "List of segment jobs. Each should be in Json format."
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/segment/jobs",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "segment", "jobs"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for segment",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "preview",
          "item": [
            {
              "name": "health-detailed",
              "item": [
                {
                  "name": "Return a detailed health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/health-detailed",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "health-detailed"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health-detailed",
              "_postman_isSubFolder": true
            },
            {
              "name": "health",
              "item": [
                {
                  "name": "Return a health check message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/health",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "health"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for health",
              "_postman_isSubFolder": true
            },
            {
              "name": "ping",
              "item": [
                {
                  "name": "Return a ping message",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/ping",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "ping"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for ping",
              "_postman_isSubFolder": true
            },
            {
              "name": "version",
              "item": [
                {
                  "name": "Return version information",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/version",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "version"]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for version",
              "_postman_isSubFolder": true
            },
            {
              "name": "estimate",
              "item": [
                {
                  "name": "SESSIONLESS: Gets result of the Estimate Job.",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/estimate/:previewId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "estimate", ":previewId"],
                      "variable": [
                        {
                          "key": "previewId",
                          "value": "{{previewId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for estimate",
              "_postman_isSubFolder": true
            },
            {
              "name": "preview",
              "item": [
                {
                  "name": "SESSIONLESS: Submits a Preview Job for a Profile Query",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "\npredicateExpression - Expression of the predicate that is to be evaluated \npredicateType - Default: PQL The only value that is available to use for this is PQL for now.\npredicateModel - Default: xdm.model.profile The model against which this predicate is to be evaulated. Please note that 'touchpoint' is not treated as model as it can be associated with any of the models like profile.\ngraphType - Graph Type you want to get the cluster from. Possible values are (coop - graph built by using coop data, pdg - private device graph, psr - propriatery stiched rules)"
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/preview",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "preview"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "SESSIONLESS: Gets result of the Preview Job in a paginated fashion. Ordering will be by objectId.",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/preview/:previewId?previewId={{previewId}}&offset={{offset}}&limit={{limit}}",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "preview", ":previewId"],
                      "query": [
                        {
                          "key": "previewId",
                          "value": "{{previewId}}"
                        },
                        {
                          "key": "offset",
                          "value": "{{offset}}"
                        },
                        {
                          "key": "limit",
                          "value": "{{limit}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "previewId"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "SESSIONLESS: Cancels the execution of the Preview Job",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "x-gw-ims-org-id",
                        "value": "{{x-gw-ims-org-id}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/preview/:previewId",
                      "protocol": "https",
                      "host": ["{{PLATFORM_GATEWAY}}"],
                      "path": ["data", "core", "ups", "preview", ":previewId"],
                      "variable": [
                        {
                          "key": "previewId",
                          "value": "{{previewId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Folder for preview",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "name": "Identity Namespace Service",
      "item": [
        {
          "name": "orgs",
          "item": [
            {
              "name": "Lists shared namespaces for the given `{imsorg}` or all owned if `{imsorg}` == `x-gw-ims-org-id`",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/core/idnamespace/orgs/:imsorg/identities/",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "core",
                    "idnamespace",
                    "orgs",
                    ":imsorg",
                    "identities",
                    ""
                  ],
                  "variable": [
                    {
                      "key": "imsorg",
                      "value": "{{imsorg}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "List details of a single namespace identified by `{id}` if it is accessible to `x-gw-ims-org-id`",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/core/idnamespace/orgs/:imsorg/identities/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "core",
                    "idnamespace",
                    "orgs",
                    ":imsorg",
                    "identities",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "imsorg",
                      "value": "{{imsorg}}"
                    },
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for orgs",
          "_postman_isSubFolder": true
        },
        {
          "name": "identities",
          "item": [
            {
              "name": "Lists all namespaces available to the client `x-gw-ims-org-id`",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/core/idnamespace/identities/",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "core", "idnamespace", "identities", ""]
                }
              },
              "response": []
            },
            {
              "name": "Create namespace under `x-gw-ims-org-id` IMS Org .",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Namespace details as a JSON input"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/core/idnamespace/identities/",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "core", "idnamespace", "identities", ""]
                }
              },
              "response": []
            },
            {
              "name": "List details of a single namespace identified by `{id}` if it is accessible to `x-gw-ims-org-id`",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/core/idnamespace/identities/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "core", "idnamespace", "identities", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update namespace owned by `x-gw-ims-org-id` and having the given `id`.",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Namespace details as a JSON input"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/core/idnamespace/identities/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "core", "idnamespace", "identities", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete namespace owned by `x-gw-ims-org-id` and identified by the given `id`.",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/core/idnamespace/identities/:id",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "core", "idnamespace", "identities", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for identities",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "name": "Sensei Unified Machine Learning",
      "item": [
        {
          "name": "engines",
          "item": [
            {
              "name": "Get a list of all Engines",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=engineListing.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/engines?start={{start}}&limit=25&orderby=-updated&property={{property}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "engines"],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "25"
                    },
                    {
                      "key": "orderby",
                      "value": "-updated"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    }
                  ]
                },
                "description": "Lists all engines providing mechanisms for pagination, filtering, and sorting."
              },
              "response": []
            },
            {
              "name": "Add a new Engine",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=engine.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "engine",
                      "value": "{{engine}}",
                      "type": "text"
                    },
                    {
                      "key": "defaultArtifact",
                      "value": "{{defaultArtifact}}",
                      "type": "text"
                    },
                    {
                      "key": "preprocessOverrideArtifact",
                      "value": "{{preprocessOverrideArtifact}}",
                      "type": "text"
                    },
                    {
                      "key": "trainOverrideArtifact",
                      "value": "{{trainOverrideArtifact}}",
                      "type": "text"
                    },
                    {
                      "key": "batchScoreOverrideArtifact",
                      "value": "{{batchScoreOverrideArtifact}}",
                      "type": "text"
                    },
                    {
                      "key": "validateOverrideArtifact",
                      "value": "{{validateOverrideArtifact}}",
                      "type": "text"
                    },
                    {
                      "key": "evaluateOverrideArtifact",
                      "value": "{{evaluateOverrideArtifact}}",
                      "type": "text"
                    },
                    {
                      "key": "publishOverrideArtifact",
                      "value": "{{publishOverrideArtifact}}",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/engines",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "engines"]
                },
                "description": "Creates a new Engine"
              },
              "response": []
            },
            {
              "name": "Get Docker Registry information",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=enginesDockerRegistryInfo.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/engines/dockerRegistry",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "engines", "dockerRegistry"]
                },
                "description": "Get Docker Registry information for use in ."
              },
              "response": []
            },
            {
              "name": "Returns Engine by id",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=engine.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/engines/:engineId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "engines", ":engineId"],
                  "variable": [
                    {
                      "key": "engineId"
                    }
                  ]
                },
                "description": "Retrieves a specific engine"
              },
              "response": []
            },
            {
              "name": "Update an Engine by id",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=engine.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=engine.v1.json"
                  },
                  {
                    "key": "If-Match",
                    "value": "{{If-Match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Engine object to be updated"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/engines/:engineId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "engines", ":engineId"],
                  "variable": [
                    {
                      "key": "engineId"
                    }
                  ]
                },
                "description": "Updates a specific engine"
              },
              "response": []
            },
            {
              "name": "Delete an existing Engine",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/engines/:engineId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "engines", ":engineId"],
                  "variable": [
                    {
                      "key": "engineId"
                    }
                  ]
                },
                "description": "Deletes a specific engine"
              },
              "response": []
            }
          ],
          "description": "Folder for engines",
          "_postman_isSubFolder": true
        },
        {
          "name": "mlInstances",
          "item": [
            {
              "name": "Get List of MLInstances matching given criteria",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=mlInstanceListing.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/mlInstances?start={{start}}&limit=25&orderby=-updated&property={{property}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "mlInstances"],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "25"
                    },
                    {
                      "key": "orderby",
                      "value": "-updated"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    }
                  ]
                },
                "description": "MLInstances may be searched by name or tags."
              },
              "response": []
            },
            {
              "name": "Add a new ML Instance",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "MLInstance object that needs to be added. Note that a valid `engineId` has to be listed in the object."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/mlInstances",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "mlInstances"]
                },
                "description": "Creates a new MLInstance of an Engine"
              },
              "response": []
            },
            {
              "name": "Delete ML instances for engineId",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/mlInstances?engineId={{engineId}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "mlInstances"],
                  "query": [
                    {
                      "key": "engineId",
                      "value": "{{engineId}}"
                    }
                  ]
                },
                "description": "Deletes all ML instances for provided engineId"
              },
              "response": []
            },
            {
              "name": "Returns MLInstance by id",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/mlInstances/:mlInstanceId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "mlInstances", ":mlInstanceId"],
                  "variable": [
                    {
                      "key": "mlInstanceId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update a ML Instance by id",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json"
                  },
                  {
                    "key": "If-Match",
                    "value": "{{If-Match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "MLInstance object to be updated"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/mlInstances/:mlInstanceId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "mlInstances", ":mlInstanceId"],
                  "variable": [
                    {
                      "key": "mlInstanceId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete an existing MLInstance",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/mlInstances/:mlInstanceId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "mlInstances", ":mlInstanceId"],
                  "variable": [
                    {
                      "key": "mlInstanceId"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for mlInstances",
          "_postman_isSubFolder": true
        },
        {
          "name": "experiments",
          "item": [
            {
              "name": "Get All Experiments for an ML Instance",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experimentListing.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments?start={{start}}&limit=25&orderby=-updated&property={{property}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "experiments"],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "25"
                    },
                    {
                      "key": "orderby",
                      "value": "-updated"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Create Experiment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json"
                  },
                  {
                    "key": "Authorization",
                    "value": "{{Authorization}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Experiment object that needs to be created"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "experiments"]
                }
              },
              "response": []
            },
            {
              "name": "Delete experiments for mlInstanceId",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments?mlInstanceId={{mlInstanceId}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "experiments"],
                  "query": [
                    {
                      "key": "mlInstanceId",
                      "value": "{{mlInstanceId}}"
                    }
                  ]
                },
                "description": "Deletes all Experiments for provided mlInstance"
              },
              "response": []
            },
            {
              "name": "Read an Experiment using Experiment ID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments/:experimentId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "experiments", ":experimentId"],
                  "variable": [
                    {
                      "key": "experimentId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update an Experiment using Experiment ID",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json"
                  },
                  {
                    "key": "If-Match",
                    "value": "{{If-Match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Experiment object to be updated"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments/:experimentId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "experiments", ":experimentId"],
                  "variable": [
                    {
                      "key": "experimentId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete an Experiment using Experiment ID",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments/:experimentId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "experiments", ":experimentId"],
                  "variable": [
                    {
                      "key": "experimentId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get List of all Experiment Runs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experimentRunListing.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments/:experimentId/runs?start={{start}}&limit=25&orderby=-updated&property={{property}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "sensei",
                    "experiments",
                    ":experimentId",
                    "runs"
                  ],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "25"
                    },
                    {
                      "key": "orderby",
                      "value": "-updated"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "experimentId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Run an experiment with parameter values",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experimentRun.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experimentRun.v1.json"
                  },
                  {
                    "key": "Authorization",
                    "value": "{{Authorization}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Run object that needs to be added"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments/:experimentId/runs",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "sensei",
                    "experiments",
                    ":experimentId",
                    "runs"
                  ],
                  "variable": [
                    {
                      "key": "experimentId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get the Run status and info",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experimentRun.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments/:experimentId/runs/:experimentRunId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "sensei",
                    "experiments",
                    ":experimentId",
                    "runs",
                    ":experimentRunId"
                  ],
                  "variable": [
                    {
                      "key": "experimentId"
                    },
                    {
                      "key": "experimentRunId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get the Run status and info",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=experimentRunStatus.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/experiments/:experimentId/runs/:experimentRunId/status",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "sensei",
                    "experiments",
                    ":experimentId",
                    "runs",
                    ":experimentRunId",
                    "status"
                  ],
                  "variable": [
                    {
                      "key": "experimentId"
                    },
                    {
                      "key": "experimentRunId"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for experiments",
          "_postman_isSubFolder": true
        },
        {
          "name": "models",
          "item": [
            {
              "name": "Get List of all Models",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=modelListing.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/models?start={{start}}&limit=25&orderby=-updated&property={{property}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "models"],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "25"
                    },
                    {
                      "key": "orderby",
                      "value": "-updated"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    }
                  ]
                },
                "description": "List all models providing mechanisms for pagination, filtering, and sorting."
              },
              "response": []
            },
            {
              "name": "Registers a generated Model",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=model.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "modelArtifact",
                      "value": "{{modelArtifact}}",
                      "type": "text"
                    },
                    {
                      "key": "model",
                      "value": "{{model}}",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/models",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "models"]
                },
                "description": "Creates a model for a particular engine and mlinstance"
              },
              "response": []
            },
            {
              "name": "Returns a Model by Id",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=model.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/models/:modelId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "models", ":modelId"],
                  "variable": [
                    {
                      "key": "modelId"
                    }
                  ]
                },
                "description": "Retrieves a specific model"
              },
              "response": []
            },
            {
              "name": "Update a Model by Id",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=model.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=model.v1.json"
                  },
                  {
                    "key": "If-Match",
                    "value": "{{If-Match}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Model object to be updated"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/models/:modelId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "models", ":modelId"],
                  "variable": [
                    {
                      "key": "modelId"
                    }
                  ]
                },
                "description": "Update an existing model"
              },
              "response": []
            },
            {
              "name": "Deletes a Model by Id",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json"
                  }
                ],
                "body": {},
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/models/:modelId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "models", ":modelId"],
                  "variable": [
                    {
                      "key": "modelId"
                    }
                  ]
                },
                "description": "Deletes a specific model"
              },
              "response": []
            },
            {
              "name": "Returns a binary model artifact by model Id",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/octet-stream"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/models/:modelId/artifact",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "models", ":modelId", "artifact"],
                  "variable": [
                    {
                      "key": "modelId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get List of all Model Transcodings",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=modelTranscodingListing.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/models/:modelId/transcodings?start={{start}}&limit=25&orderby=-updated&property={{property}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "sensei",
                    "models",
                    ":modelId",
                    "transcodings"
                  ],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "25"
                    },
                    {
                      "key": "orderby",
                      "value": "-updated"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "modelId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Creates a model transcoding",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=modelTranscoding.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=modelTranscoding.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Model Transcoding to be created"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/models/:modelId/transcodings",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "sensei",
                    "models",
                    ":modelId",
                    "transcodings"
                  ],
                  "variable": [
                    {
                      "key": "modelId"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Returns a Model Transcoding by Id",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=modelTranscoding.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/models/:modelId/transcodings/:modelTranscodingId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "sensei",
                    "models",
                    ":modelId",
                    "transcodings",
                    ":modelTranscodingId"
                  ],
                  "variable": [
                    {
                      "key": "modelId"
                    },
                    {
                      "key": "modelTranscodingId"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for models",
          "_postman_isSubFolder": true
        },
        {
          "name": "insights",
          "item": [
            {
              "name": "Get a list of insights",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=insightListing.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/insights?start={{start}}&limit=25&orderby=-updated&property={{property}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "insights"],
                  "query": [
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "limit",
                      "value": "25"
                    },
                    {
                      "key": "orderby",
                      "value": "-updated"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    }
                  ]
                },
                "description": "Lists all insights for all experiment runs"
              },
              "response": []
            },
            {
              "name": "Add a new model insight",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=insight.v1.json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=insight.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Insight object that needs to be added"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/insights",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "insights"]
                },
                "description": "Creates a new model insight"
              },
              "response": []
            },
            {
              "name": "Returns Insight by id",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=insight.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/insights/:insightId",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "insights", ":insightId"],
                  "variable": [
                    {
                      "key": "insightId"
                    }
                  ]
                },
                "description": "Retrieves a specific insight"
              },
              "response": []
            },
            {
              "name": "Get a list of default metrics for algorithms",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/vnd.adobe.platform.sensei+json;profile=defaultMetricsListing.v1.json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/sensei/insights/metrics",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "sensei", "insights", "metrics"]
                },
                "description": "Lists all default metrics available for algorithms"
              },
              "response": []
            }
          ],
          "description": "Folder for insights",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "name": "Experience Query Service",
      "item": [
        {
          "name": "connection_parameters",
          "item": [
            {
              "name": "Requests connection parameters for the interactive interface",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  },
                  {
                    "key": "x-request-id",
                    "value": "{{x-request-id}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/query/connection_parameters",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "query",
                    "connection_parameters"
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for connection_parameters",
          "_postman_isSubFolder": true
        },
        {
          "name": "queries",
          "item": [
            {
              "name": "Fetches a list of queries for this IMS organization.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  },
                  {
                    "key": "x-request-id",
                    "value": "{{x-request-id}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/query/queries?orderby={{orderby}}&limit={{limit}}&start={{start}}&property={{property}}&excludeSoftDeleted={{excludeSoftDeleted}}&excludeHidden={{excludeHidden}}",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "query", "queries"],
                  "query": [
                    {
                      "key": "orderby",
                      "value": "{{orderby}}"
                    },
                    {
                      "key": "limit",
                      "value": "{{limit}}"
                    },
                    {
                      "key": "start",
                      "value": "{{start}}"
                    },
                    {
                      "key": "property",
                      "value": "{{property}}"
                    },
                    {
                      "key": "excludeSoftDeleted",
                      "value": "{{excludeSoftDeleted}}"
                    },
                    {
                      "key": "excludeHidden",
                      "value": "{{excludeHidden}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Creates new query.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  },
                  {
                    "key": "x-request-id",
                    "value": "{{x-request-id}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Query to be created."
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/query/queries",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": ["data", "foundation", "query", "queries"]
                }
              },
              "response": []
            },
            {
              "name": "Requests query status.",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  },
                  {
                    "key": "x-request-id",
                    "value": "{{x-request-id}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/query/queries/:queryid",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "query",
                    "queries",
                    ":queryid"
                  ],
                  "variable": [
                    {
                      "key": "queryid",
                      "value": "{{queryid}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Requests cancellation or query soft delete",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-gw-ims-org-id",
                    "value": "{{x-gw-ims-org-id}}"
                  },
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  },
                  {
                    "key": "x-request-id",
                    "value": "{{x-request-id}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Requested operation"
                },
                "url": {
                  "raw": "https://{{PLATFORM_GATEWAY}}/data/foundation/query/queries/:queryid",
                  "protocol": "https",
                  "host": ["{{PLATFORM_GATEWAY}}"],
                  "path": [
                    "data",
                    "foundation",
                    "query",
                    "queries",
                    ":queryid"
                  ],
                  "variable": [
                    {
                      "key": "queryid",
                      "value": "{{queryid}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Folder for queries",
          "_postman_isSubFolder": true
        }
      ]
    }
  ]
}
